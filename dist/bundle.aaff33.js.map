{"version":3,"file":"bundle.aaff33.js","mappings":"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","sources":["webpack://sentry-sourcemap/./node_modules/@sentry/webpack-plugin/src/sentry-webpack.module.js","webpack://sentry-sourcemap/./node_modules/@sentry/hub/esm/hub.js","webpack://sentry-sourcemap/./node_modules/@sentry/hub/esm/scope.js","webpack://sentry-sourcemap/./node_modules/@sentry/hub/esm/session.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/errors.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/hubextensions.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/idletransaction.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/span.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/transaction.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/utils.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/baggage.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/browser.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/global.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/instrument.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/is.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/logger.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/misc.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/node.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/env.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/object.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/stacktrace.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/string.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/supports.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/syncpromise.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/time.js","webpack://sentry-sourcemap/webpack/bootstrap","webpack://sentry-sourcemap/webpack/runtime/define property getters","webpack://sentry-sourcemap/webpack/runtime/global","webpack://sentry-sourcemap/webpack/runtime/harmony module decorator","webpack://sentry-sourcemap/webpack/runtime/hasOwnProperty shorthand","webpack://sentry-sourcemap/./node_modules/@sentry/core/esm/integration.js","webpack://sentry-sourcemap/./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack://sentry-sourcemap/./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/error.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/dsn.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/envelope.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/normalize.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/memo.js","webpack://sentry-sourcemap/./node_modules/@sentry/core/esm/api.js","webpack://sentry-sourcemap/./node_modules/@sentry/core/esm/envelope.js","webpack://sentry-sourcemap/./node_modules/@sentry/core/esm/baseclient.js","webpack://sentry-sourcemap/./node_modules/@sentry/core/esm/version.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/eventbuilder.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/severity.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/transports/utils.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/client.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/clientreport.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/stack-parsers.js","webpack://sentry-sourcemap/./node_modules/@sentry/hub/esm/exports.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/helpers.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/integrations/dedupe.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/integrations/httpcontext.js","webpack://sentry-sourcemap/./node_modules/@sentry/core/esm/transports/base.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/promisebuffer.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/ratelimit.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/transports/fetch.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/transports/xhr.js","webpack://sentry-sourcemap/./node_modules/@sentry/browser/esm/sdk.js","webpack://sentry-sourcemap/./node_modules/@sentry/utils/esm/tracing.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/backgroundtab.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/metrics/utils.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/metrics/index.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/request.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/router.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/browser/browsertracing.js","webpack://sentry-sourcemap/./node_modules/@sentry/tracing/esm/index.js","webpack://sentry-sourcemap/./node_modules/@sentry/core/esm/sdk.js","webpack://sentry-sourcemap/./src/index.js"],"sourcesContent":["var _global = (typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}); _global.SENTRY_RELEASE={id:\"test\"};\n      _global.SENTRY_RELEASES=_global.SENTRY_RELEASES || {};\n      _global.SENTRY_RELEASES[\"javascript@dp-9p\"]={id:\"test\"};\n      ","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, getGlobalObject, getGlobalSingleton, isNodeEnv } from '@sentry/utils';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nvar API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n  \n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {;this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n  ) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n        const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    var timestamp = dateTimestampInSeconds();\n    var mergedBreadcrumb = { timestamp, ...breadcrumb };\n    var finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setContext(name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    var layer = this.getStackTop();\n    var scope = layer && layer.scope;\n    var session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    var global = getGlobalObject();\n    const { userAgent } = global.navigator || {};\n\n    var session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    var client = this.getClient();\n    var options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    var session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n     _callExtensionMethod(method, ...args) {\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    var sentry = getMainCarrier().__SENTRY__;\n    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { isPlainObject, dateTimestampInSeconds, getGlobalSingleton, SyncPromise, logger, isThenable } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n  \n\n  /** Callback for client to receive scope changes. */\n  \n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  \n\n  /** Array of breadcrumbs. */\n  \n\n  /** User */\n  \n\n  /** Tags */\n  \n\n  /** Extra */\n  \n\n  /** Contexts */\n  \n\n  /** Attachments */\n  \n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  \n\n  /** Fingerprint */\n  \n\n  /** Severity */\n    \n\n  /** Transaction Name */\n  \n\n  /** Span */\n  \n\n  /** Session */\n  \n\n  /** Request Mode Session Status */\n  \n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    var newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n        level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n            delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    var span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      var updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n            captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    var mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional information about the original exception.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      var transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      var processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  var startingTime = timestampInSeconds();\n\n  var session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    var duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { getActiveTransaction } from './utils.js';\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { getMainCarrier } from '@sentry/hub';\nimport { logger, isNaN, dynamicRequire, loadModule, isNodeEnv } from '@sentry/utils';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { Transaction } from './transaction.js';\nimport { hasTracingEnabled } from './utils.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  var scope = this.getScope();\n  if (scope) {\n    var span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      transactionSampling: { method: 'explicitly_set' },\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      transactionSampling: {\n        method: 'client_sampler',\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n    transaction.setMetadata({\n      transactionSampling: { method: 'inheritance' },\n    });\n  } else {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      transactionSampling: {\n        method: 'client_rate',\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  \n  transactionContext,\n  customSamplingContext,\n) {\n  var client = this.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n) {\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * @private\n */\nfunction _addTracingExtensions() {\n  var carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n}\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n  var carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  var packageToIntegrationMapping = {\n    mongodb() {\n      var integration = dynamicRequire(module, './integrations/node/mongo') \n\n;\n      return new integration.Mongo();\n    },\n    mongoose() {\n      var integration = dynamicRequire(module, './integrations/node/mongo') \n\n;\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      var integration = dynamicRequire(module, './integrations/node/mysql') \n\n;\n      return new integration.Mysql();\n    },\n    pg() {\n      var integration = dynamicRequire(module, './integrations/node/postgres') \n\n;\n      return new integration.Postgres();\n    },\n  };\n\n  var mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!loadModule(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) ;\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n  _addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if (isNodeEnv()) {\n    _autoloadDatabaseIntegrations();\n  }\n\n  // If an error happens globally, we should make sure transaction status is set to error.\n  registerErrorInstrumentation();\n}\n\nexport { _addTracingExtensions, addExtensionMethods, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { timestampWithMs, logger } from '@sentry/utils';\nimport { SpanRecorder } from './span.js';\nimport { Transaction } from './transaction.js';\n\nvar DEFAULT_IDLE_TIMEOUT = 1000;\nvar DEFAULT_FINAL_TIMEOUT = 30000;\nvar HEARTBEAT_INTERVAL = 5000;\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n   __init() {this.activities = {};}\n\n  // Track state of activities in previous heartbeat\n  \n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n   __init2() {this._heartbeatCounter = 0;}\n\n  // We should not use heartbeat if we finished a transaction\n   __init3() {this._finished = false;}\n\n    __init4() {this._beforeFinishCallbacks = [];}\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  \n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = DEFAULT_IDLE_TIMEOUT,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = DEFAULT_FINAL_TIMEOUT,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._onScope = _onScope;IdleTransaction.prototype.__init.call(this);IdleTransaction.prototype.__init2.call(this);IdleTransaction.prototype.__init3.call(this);IdleTransaction.prototype.__init4.call(this);;\n\n    if (_onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._startIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = timestampWithMs()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (var callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        var keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      var pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      var popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idletimeout, if there is one\n   */\n   _cancelIdleTimeout() {\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Creates an idletimeout\n   */\n   _startIdleTimeout(endTimestamp) {\n    this._cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this._cancelIdleTimeout();\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] popActivity ${spanId}`);\n            delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      // We need to add the timeout here to have the real endtimestamp of the transaction\n      // Remember timestampWithMs is in seconds, timeout is in ms\n      var endTimestamp = timestampWithMs() + this._idleTimeout / 1000;\n      this._startIdleTimeout(endTimestamp);\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    var heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter += 1;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, HEARTBEAT_INTERVAL);\n  }\n}\n\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n  var scope = hub.getScope();\n  if (scope) {\n    var transaction = scope.getTransaction();\n    if (transaction) {\n      scope.setSpan(undefined);\n    }\n  }\n}\n\nexport { DEFAULT_FINAL_TIMEOUT, DEFAULT_IDLE_TIMEOUT, HEARTBEAT_INTERVAL, IdleTransaction, IdleTransactionSpanRecorder };\n//# sourceMappingURL=idletransaction.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { uuid4, timestampWithMs, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n   __init() {this.spans = [];}\n\n   constructor(maxlen = 1000) {;SpanRecorder.prototype.__init.call(this);\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n   __init2() {this.traceId = uuid4();}\n\n  /**\n   * @inheritDoc\n   */\n   __init3() {this.spanId = uuid4().substring(16);}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * Internal keeper of the status\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n   __init4() {this.startTimestamp = timestampWithMs();}\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   __init5() {this.tags = {};}\n\n  /**\n   * @inheritDoc\n   */\n     __init6() {this.data = {};}\n\n  /**\n   * List of spans that were finalized\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext) {;Span.prototype.__init2.call(this);Span.prototype.__init3.call(this);Span.prototype.__init4.call(this);Span.prototype.__init5.call(this);Span.prototype.__init6.call(this);\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    var childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    var spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = _nullishCoalesce(spanContext.data, () => ( {}));\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = _nullishCoalesce(spanContext.spanId, () => ( this.spanId));\n    this.startTimestamp = _nullishCoalesce(spanContext.startTimestamp, () => ( this.startTimestamp));\n    this.status = spanContext.status;\n    this.tags = _nullishCoalesce(spanContext.tags, () => ( {}));\n    this.traceId = _nullishCoalesce(spanContext.traceId, () => ( this.traceId));\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\nexport { Span, SpanRecorder, spanStatusfromHttpCode };\n//# sourceMappingURL=span.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getCurrentHub } from '@sentry/hub';\nimport { logger, dropUndefinedKeys, isBaggageMutable, createBaggage, getSentryBaggageItems } from '@sentry/utils';\nimport { Span, SpanRecorder } from './span.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n  \n\n  /**\n   * The reference to the current hub.\n   */\n  \n\n   __init() {this._measurements = {};}\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);Transaction.prototype.__init.call(this);;\n\n    this._hub = hub || getCurrentHub();\n\n    this.name = transactionContext.name || '';\n\n    this.metadata = transactionContext.metadata || {};\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name) {\n    this.name = name;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Set metadata for this transaction.\n   * @hidden\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      var client = this._hub.getClient();\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    var transaction = {\n      contexts: {\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...this.metadata,\n        baggage: this.getBaggage(),\n      },\n    };\n\n    var hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    var spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = _nullishCoalesce(transactionContext.name, () => ( ''));\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n   getBaggage() {\n    var existingBaggage = this.metadata.baggage;\n\n    // Only add Sentry baggage items to baggage, if baggage does not exist yet or it is still\n    // empty and mutable\n    var finalBaggage =\n      !existingBaggage || isBaggageMutable(existingBaggage)\n        ? this._populateBaggageWithSentryValues(existingBaggage)\n        : existingBaggage;\n\n    // Update the baggage stored on the transaction.\n    this.metadata.baggage = finalBaggage;\n\n    return finalBaggage;\n  }\n\n  /**\n   * Collects and adds data to the passed baggage object.\n   *\n   * Note: This function does not explicitly check if the passed baggage object is allowed\n   * to be modified. Implicitly, `setBaggageValue` will not make modification to the object\n   * if it was already set immutable.\n   *\n   * After adding the data, the baggage object is set immutable to prevent further modifications.\n   *\n   * @param baggage\n   *\n   * @returns modified and immutable baggage object\n   */\n   _populateBaggageWithSentryValues(baggage = createBaggage({})) {\n    var hub = this._hub || getCurrentHub();\n    var client = hub && hub.getClient();\n\n    if (!client) return baggage;\n\n    const { environment, release } = client.getOptions() || {};\n    const { publicKey: public_key } = client.getDsn() || {};\n\n    var rate = this.metadata && this.metadata.transactionSampling && this.metadata.transactionSampling.rate;\n    var sample_rate =\n      rate !== undefined\n        ? rate.toLocaleString('fullwide', { useGrouping: false, maximumFractionDigits: 16 })\n        : undefined;\n\n    // For now we're not sending the transaction name and user_id due to PII concerns\n    // commenting it out for now because we'll probably need it in the future\n\n    var scope = hub.getScope();\n    const { /* id: user_id, */ segment: user_segment } = (scope && scope.getUser()) || {};\n\n    return createBaggage(\n      dropUndefinedKeys({\n        environment,\n        release,\n        // transaction: this.name,\n        // replace `someContidion` with whatever decision we come up with to guard PII in DSC\n        // ...(someCondition && { user_id }),\n        user_segment,\n        public_key,\n        trace_id: this.traceId,\n        sample_rate,\n        ...getSentryBaggageItems(baggage), // keep user-added values\n      } ),\n      '',\n      false, // set baggage immutable\n    );\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n","import { getCurrentHub } from '@sentry/hub';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  var client = getCurrentHub().getClient();\n  var options = maybeOptions || (client && client.getOptions());\n  return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  var hub = maybeHub || getCurrentHub();\n  var scope = hub.getScope();\n  return scope && (scope.getTransaction() );\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nfunction secToMs(time) {\n  return time * 1000;\n}\n\nexport { getActiveTransaction, hasTracingEnabled, msToSec, secToMs };\n//# sourceMappingURL=utils.js.map\n","import { isString } from './is.js';\nimport { logger } from './logger.js';\n\nvar BAGGAGE_HEADER_NAME = 'baggage';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nvar MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/** Create an instance of Baggage */\nfunction createBaggage(initItems, baggageString = '', mutable = true) {\n  return [{ ...initItems }, baggageString, mutable];\n}\n\n/** Get a value from baggage */\nfunction getBaggageValue(baggage, key) {\n  return baggage[0][key];\n}\n\n/** Add a value to baggage */\nfunction setBaggageValue(baggage, key, value) {\n  if (isBaggageMutable(baggage)) {\n    baggage[0][key] = value;\n  }\n}\n\n/** Check if the Sentry part of the passed baggage (i.e. the first element in the tuple) is empty */\nfunction isSentryBaggageEmpty(baggage) {\n  return Object.keys(baggage[0]).length === 0;\n}\n\n/** Returns Sentry specific baggage values */\nfunction getSentryBaggageItems(baggage) {\n  return baggage[0];\n}\n\n/**\n * Returns 3rd party baggage string of @param baggage\n * @param baggage\n */\nfunction getThirdPartyBaggage(baggage) {\n  return baggage[1];\n}\n\n/**\n * Checks if baggage is mutable\n * @param baggage\n * @returns true if baggage is mutable, else false\n */\nfunction isBaggageMutable(baggage) {\n  return baggage[2];\n}\n\n/**\n * Sets the passed baggage immutable\n * @param baggage\n */\nfunction setBaggageImmutable(baggage) {\n  baggage[2] = false;\n}\n\n/** Serialize a baggage object */\nfunction serializeBaggage(baggage) {\n  return Object.keys(baggage[0]).reduce((prev, key) => {\n    var val = baggage[0][key] ;\n    var baggageEntry = `${SENTRY_BAGGAGE_KEY_PREFIX}${encodeURIComponent(key)}=${encodeURIComponent(val)}`;\n    var newVal = prev === '' ? baggageEntry : `${prev},${baggageEntry}`;\n    if (newVal.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`Not adding key: ${key} with val: ${val} to baggage due to exceeding baggage size limits.`);\n      return prev;\n    } else {\n      return newVal;\n    }\n  }, baggage[1]);\n}\n\n/**\n * Parse a baggage header from a string or a string array and return a Baggage object\n *\n * If @param includeThirdPartyEntries is set to true, third party baggage entries are added to the Baggage object\n * (This is necessary for merging potentially pre-existing baggage headers in outgoing requests with\n * our `sentry-` values)\n */\nfunction parseBaggageHeader(\n  inputBaggageValue,\n  includeThirdPartyEntries = false,\n) {\n  // Adding this check here because we got reports of this function failing due to the input value\n  // not being a string. This debug log might help us determine what's going on here.\n  if ((!Array.isArray(inputBaggageValue) && !isString(inputBaggageValue)) || typeof inputBaggageValue === 'number') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        '[parseBaggageHeader] Received input value of incompatible type: ',\n        typeof inputBaggageValue,\n        inputBaggageValue,\n      );\n\n    // Gonna early-return an empty baggage object so that we don't fail later on\n    return createBaggage({}, '');\n  }\n\n  var baggageEntries = (isString(inputBaggageValue) ? inputBaggageValue : inputBaggageValue.join(','))\n    .split(',')\n    .map(entry => entry.trim())\n    .filter(entry => entry !== '' && (includeThirdPartyEntries || SENTRY_BAGGAGE_KEY_PREFIX_REGEX.test(entry)));\n\n  return baggageEntries.reduce(\n    ([baggageObj, baggageString], curr) => {\n      const [key, val] = curr.split('=');\n      if (SENTRY_BAGGAGE_KEY_PREFIX_REGEX.test(key)) {\n        var baggageKey = decodeURIComponent(key.split('-')[1]);\n        return [\n          {\n            ...baggageObj,\n            [baggageKey]: decodeURIComponent(val),\n          },\n          baggageString,\n          true,\n        ];\n      } else {\n        return [baggageObj, baggageString === '' ? curr : `${baggageString},${curr}`, true];\n      }\n    },\n    [{}, '', true],\n  );\n}\n\n/**\n * Merges the baggage header we saved from the incoming request (or meta tag) with\n * a possibly created or modified baggage header by a third party that's been added\n * to the outgoing request header.\n *\n * In case @param headerBaggageString exists, we can safely add the the 3rd party part of @param headerBaggage\n * with our @param incomingBaggage. This is possible because if we modified anything beforehand,\n * it would only affect parts of the sentry baggage (@see Baggage interface).\n *\n * @param incomingBaggage the baggage header of the incoming request that might contain sentry entries\n * @param thirdPartyBaggageHeader possibly existing baggage header string or string[] added from a third\n *        party to the request headers\n *\n * @return a merged and serialized baggage string to be propagated with the outgoing request\n */\nfunction mergeAndSerializeBaggage(incomingBaggage, thirdPartyBaggageHeader) {\n  if (!incomingBaggage && !thirdPartyBaggageHeader) {\n    return '';\n  }\n\n  var headerBaggage = (thirdPartyBaggageHeader && parseBaggageHeader(thirdPartyBaggageHeader, true)) || undefined;\n  var thirdPartyHeaderBaggage = headerBaggage && getThirdPartyBaggage(headerBaggage);\n\n  var finalBaggage = createBaggage((incomingBaggage && incomingBaggage[0]) || {}, thirdPartyHeaderBaggage || '');\n  return serializeBaggage(finalBaggage);\n}\n\n/**\n * Helper function that takes a raw baggage string (if available) and the processed sentry-trace header\n * data (if available), parses the baggage string and creates a Baggage object\n * If there is no baggage string, it will create an empty Baggage object.\n * In a second step, this functions determines if the created Baggage object should be set immutable\n * to prevent mutation of the Sentry data.\n *\n * Extracted this logic to a function because it's duplicated in a lot of places.\n *\n * @param rawBaggageValue\n * @param sentryTraceHeader\n */\nfunction parseBaggageSetMutability(\n  rawBaggageValue,\n  sentryTraceHeader,\n) {\n  var baggage = parseBaggageHeader(rawBaggageValue || '');\n\n  // Because we are always creating a Baggage object by calling `parseBaggageHeader` above\n  // (either a filled one or an empty one, even if we didn't get a `baggage` header),\n  // we only need to check if we have a sentry-trace header or not. As soon as we have it,\n  // we set baggage immutable. In case we don't get a sentry-trace header, we can assume that\n  // this SDK is the head of the trace and thus we still permit mutation at this time.\n  // There is one exception though, which is that we get a baggage-header with `sentry-`\n  // items but NO sentry-trace header. In this case we also set the baggage immutable for now\n  // but if smoething like this would ever happen, we should revisit this and determine\n  // what this would actually mean for the trace (i.e. is this SDK the head?, what happened\n  // before that we don't have a sentry-trace header?, etc)\n  (sentryTraceHeader || !isSentryBaggageEmpty(baggage)) && setBaggageImmutable(baggage);\n\n  return baggage;\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, createBaggage, getBaggageValue, getSentryBaggageItems, getThirdPartyBaggage, isBaggageMutable, isSentryBaggageEmpty, mergeAndSerializeBaggage, parseBaggageHeader, parseBaggageSetMutability, serializeBaggage, setBaggageImmutable, setBaggageValue };\n//# sourceMappingURL=baggage.js.map\n","import { getGlobalObject } from './global.js';\nimport { isString } from './is.js';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem, keyAttrs) {\n  \n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    let height = 0;\n    let len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    let nextStr;\n\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  var elem = el \n\n;\n\n  var out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  var keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n        className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  var allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  var global = getGlobalObject();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\nexport { getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","import { isNodeEnv } from './node.js';\n\n/** Internal */\n\nvar fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nfunction getGlobalObject() {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined'       ? window       : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  var global = (obj || getGlobalObject()) ;\n  var __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=global.js.map\n","import { getGlobalObject } from './global.js';\nimport { isInstanceOf, isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch, supportsHistory } from './supports.js';\n\nvar global = getGlobalObject();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nvar handlers = {};\nvar instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (var handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in global)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch) {\n    return function (...args) {\n      var handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n            return originalFetch.apply(global, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  var xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n            var xhr = this;\n      var url = args[1];\n      var xhrInfo = (xhr.__sentry_xhr__ = {\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n            if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      var onreadystatechangeHandler = function () {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original) {\n          return function (...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  var oldOnPopState = global.onpopstate;\n  global.onpopstate = function ( ...args) {\n    var to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    var from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      var url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        var from = lastHref;\n        var to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nvar debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    var target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    var name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  var triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n        var proto = (global )[target] && (global )[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n        \n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            var el = this ;\n            var handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            var handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              var handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n          \n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              var el = this ;\n              var handlers = el.__sentry_instrumentation_handlers__ || {};\n              var handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type];                 }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n            return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\nexport { addInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","var objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat, ty) {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { getGlobalObject, getGlobalSingleton } from './global.js';\n\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n\nvar CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  var global = getGlobalObject();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  var originalConsole = global.console ;\n  var wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    var originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  var logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n            logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { getGlobalObject } from './global.js';\nimport { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  var global = getGlobalObject() ;\n  var crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = (num) => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        var r = (Math.random() * 16) | 0;\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  var firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  var exception = (event.exception = event.exception || {});\n  var values = (exception.values = exception.values || []);\n  var firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  var firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  var defaultMechanism = { type: 'generic', handled: true };\n  var currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    var mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n    if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, checkOrSetAlreadyCaught, getEventDescription, parseSemver, parseUrl, stripUrlQueryAndFragment, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\nexport { isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  var original = source[name] ;\n  var wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  var proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    var newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    var extractedProps = {};\n    for (var property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  var keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    var serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  var memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (var key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n            objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { _optionalChain } from './buildPolyfills';\n\nvar STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  var sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    var frames = [];\n\n    for (var line of stack.split('\\n').slice(skipFirst)) {\n      for (var parser of sortedParsers) {\n        var frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  var firstFrameFunction = localStack[0].function || '';\n  var lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nvar defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\nfunction node(getModule) {\n  var FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  var FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/;\n\n    return (line) => {\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    var lineMatch = line.match(FULL_MATCH);\n    if (!lineMatch) {\n      return undefined;\n    }\n\n    let object;\n    let method;\n    let functionName;\n    let typeName;\n    let methodName;\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n\n      let methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] === '.') {\n                methodStart--;\n      }\n\n      if (methodStart > 0) {\n        object = functionName.substr(0, methodStart);\n        method = functionName.substr(methodStart + 1);\n        var objectEnd = object.indexOf('.Module');\n        if (objectEnd > 0) {\n          functionName = functionName.substr(objectEnd + 1);\n          object = object.substr(0, objectEnd);\n        }\n      }\n      typeName = undefined;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = undefined;\n      functionName = undefined;\n    }\n\n    if (functionName === undefined) {\n      methodName = methodName || '<anonymous>';\n      functionName = typeName ? `${typeName}.${methodName}` : methodName;\n    }\n\n    var filename = _optionalChain([lineMatch, 'access', _ => _[2], 'optionalAccess', _2 => _2.startsWith, 'call', _3 => _3('file://')]) ? lineMatch[2].substr(7) : lineMatch[2];\n    var isNative = lineMatch[5] === 'native';\n    var isInternal =\n      isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && filename.indexOf(':\\\\') !== 1);\n\n    // in_app is all that's not an internal Node function or a module within node_modules\n    // note that isNative appears to return true even for node core libraries\n    // see https://github.com/getsentry/raven-node/issues/176\n    var in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n    return {\n      filename,\n      module: _optionalChain([getModule, 'optionalCall', _4 => _4(filename)]),\n      function: functionName,\n      lineno: parseInt(lineMatch[3], 10) || undefined,\n      colno: parseInt(lineMatch[4], 10) || undefined,\n      in_app,\n    };\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  var lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n        colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  var output = [];\n    for (let i = 0; i < input.length; i++) {\n    var value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nfunction isMatchingPattern(value, pattern) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexport { escapeStringForRegex, isMatchingPattern, safeJoin, snipLine, truncate };\n//# sourceMappingURL=string.js.map\n","import { getGlobalObject } from './global.js';\nimport { logger } from './logger.js';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in getGlobalObject())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  var global = getGlobalObject();\n\n  // Fast path to avoid DOM I/O\n    if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  var doc = global.document;\n    if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      var sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  var global = getGlobalObject();\n      var chrome = (global ).chrome;\n  var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { isThenable } from './is.js';\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  var PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  var RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  var REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n  \n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    var cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n                handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { getGlobalObject } from './global.js';\nimport { dynamicRequire, isNodeEnv } from './node.js';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  var timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    var perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nvar timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nvar dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nvar timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nvar timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nvar usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nvar browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  var threshold = 3600 * 1000;\n  var performanceNow = performance.now();\n  var dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  var timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  var timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n    var navigationStart = performance.timing && performance.timing.navigationStart;\n  var hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  var navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n\nvar installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * @private\n */\nfunction filterDuplicates(integrations) {\n  return integrations.reduce((acc, integrations) => {\n    if (acc.every(accIntegration => integrations.name !== accIntegration.name)) {\n      acc.push(integrations);\n    }\n    return acc;\n  }, [] );\n}\n\n/** Gets integration to install */\nfunction getIntegrationsToSetup(options) {\n  var defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  var userIntegrations = options.integrations;\n\n  let integrations = [...filterDuplicates(defaultIntegrations)];\n\n  if (Array.isArray(userIntegrations)) {\n    // Filter out integrations that are also included in user options\n    integrations = [\n      ...integrations.filter(integrations =>\n        userIntegrations.every(userIntegration => userIntegration.name !== integrations.name),\n      ),\n      // And filter out duplicated user options integrations\n      ...filterDuplicates(userIntegrations),\n    ];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(integrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  var integrationsNames = integrations.map(i => i.name);\n  var alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  var integrationIndex = {};\n\n  integrations.forEach(integration => {\n    integrationIndex[integration.name] = integration;\n\n    if (installedIntegrations.indexOf(integration.name) === -1) {\n      integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n      installedIntegrations.push(integration.name);\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n    }\n  });\n\n  return integrationIndex;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { logger, getEventDescription, isMatchingPattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {;this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcess = (event) => {\n      var hub = getCurrentHub();\n      if (hub) {\n        var self = hub.getIntegration(InboundFilters);\n        if (self) {\n          var client = hub.getClient();\n          var clientOptions = client ? client.getOptions() : {};\n          var options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message =>\n    ignoreErrors.some(pattern => isMatchingPattern(message, pattern)),\n  );\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n        return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    var frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n        originalFunctionToString = Function.prototype.toString;\n\n        Function.prototype.toString = function ( ...args) {\n      var context = getOriginalFunction(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n  \n\n   constructor( message) {\n    super(message);this.message = message;;\n\n    this.name = new.target.prototype.constructor.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { SentryError } from './error.js';\n\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  var match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  var split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    var projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  var requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n  var components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\n/**\n * Changes a Dsn to point to the `relay` server running in the Lambda Extension.\n *\n * This is only used by the serverless integration for AWS Lambda.\n *\n * @param originalDsn The original Dsn of the customer.\n * @returns Dsn pointing to Lambda extension.\n */\nfunction extensionRelayDSN(originalDsn) {\n  if (originalDsn === undefined) {\n    return undefined;\n  }\n\n  var dsn = dsnFromString(originalDsn);\n  dsn.host = 'localhost';\n  dsn.port = '3000';\n  dsn.protocol = 'http';\n\n  return dsnToString(dsn);\n}\n\nexport { dsnToString, extensionRelayDSN, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  var envelopeItems = envelope[1];\n  envelopeItems.forEach((envelopeItem) => {\n    var envelopeItemType = envelopeItem[0].type;\n    callback(envelopeItem, envelopeItemType);\n  });\n}\n\nfunction encodeUTF8(input, textEncoder) {\n  var utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (var item of items) {\n    const [itemHeaders, payload] = item ;\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n    append(typeof payload === 'string' || payload instanceof Uint8Array ? payload : JSON.stringify(payload));\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  var totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  var merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (var buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  var buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nvar ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, envelopeItemTypeToDataCategory, forEachEnvelopeItem, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output..\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n    object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  var normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value ;\n  }\n\n  var stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  var valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      var jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, depth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  var normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  var visitable = convertToPlainObject(value );\n\n  for (var visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    var visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n        if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n        if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) ).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  var hasWeakSet = typeof WeakSet === 'function';\n  var inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n        for (let i = 0; i < inner.length; i++) {\n      var value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { urlEncode, makeDsn, dsnToString } from '@sentry/utils';\n\nvar SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  var protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  var port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  var dsn = makeDsn(dsnLike);\n  var endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (var key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      var user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { dsnToString, createEnvelope, dropUndefinedKeys, getSentryBaggageItems } from '@sentry/utils';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(metadata) {\n  if (!metadata || !metadata.sdk) {\n    return;\n  }\n  const { name, version } = metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  var envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var eventType = event.type || 'event';\n\n  const { transactionSampling } = event.sdkProcessingMetadata || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  var envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  var eventItem = [\n    {\n      type: eventType,\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n    },\n    event,\n  ];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  var baggage = event.sdkProcessingMetadata && event.sdkProcessingMetadata.baggage;\n  var dynamicSamplingContext = baggage && getSentryBaggageItems(baggage);\n\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      dynamicSamplingContext && {\n        trace: dropUndefinedKeys({ ...dynamicSamplingContext }) ,\n      }),\n  };\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { updateSession, Scope } from '@sentry/hub';\nimport { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, uuid4, dateTimestampInSeconds, normalize, truncate, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations } from './integration.js';\n\nvar ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n  \n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  \n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {;BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options.tunnel);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    var promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    var transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (var attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      var env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category) {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      var key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    var exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (var ex of exceptions) {\n        var mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    var sessionNonTerminal = session.status === 'ok';\n    var shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      var tick = 1;\n\n      var interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = this.getOptions();\n    var prepared = {\n      ...event,\n      event_id: event.event_id || hint.event_id || uuid4(),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = resolvedSyncPromise(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // Collect attachments from the hint and scope\n      var attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n   _normalizeEvent(event, depth, maxBreadth) {\n    if (!event) {\n      return null;\n    }\n\n    var normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth, maxBreadth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth, maxBreadth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth, maxBreadth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth, maxBreadth),\n      }),\n    };\n\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace && normalized.contexts) {\n      normalized.contexts.trace = event.contexts.trace;\n\n      // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n      if (event.contexts.trace.data) {\n        normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n      }\n    }\n\n    // event.spans[].data may contain circular/dangerous data so we need to normalize it\n    if (event.spans) {\n      normalized.spans = event.spans.map(span => {\n        // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n        if (span.data) {\n          span.data = normalize(span.data, depth, maxBreadth);\n        }\n        return span;\n      });\n    }\n\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n   _applyClientOptions(event) {\n    var options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    var exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    var request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n   _applyIntegrationsMetadata(event) {\n    var integrationsArray = Object.keys(this._integrations);\n    if (integrationsArray.length > 0) {\n      event.sdk = event.sdk || {};\n      event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationsArray];\n    }\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.'));\n    }\n\n    var isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', event.type || 'error');\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        var isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        var beforeSendResult = beforeSend(prepared, hint);\n        return _ensureBeforeSendRv(beforeSendResult);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', event.type || 'error');\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        var session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason ,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing += 1;\n    void promise.then(\n      value => {\n        this._numProcessing -= 1;\n        return value;\n      },\n      reason => {\n        this._numProcessing -= 1;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    var outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n    \n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` is of expected type.\n */\nfunction _ensureBeforeSendRv(rv) {\n  var nullErr = '`beforeSend` method has to return `null` or a valid event.';\n  if (isThenable(rv)) {\n    return rv.then(\n      event => {\n        if (!(isPlainObject(event) || event === null)) {\n          throw new SentryError(nullErr);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`beforeSend rejected with ${e}`);\n      },\n    );\n  } else if (!(isPlainObject(rv) || rv === null)) {\n    throw new SentryError(nullErr);\n  }\n  return rv;\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","var SDK_VERSION = '7.5.1';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { isEvent, extractExceptionKeysForMessage, normalizeToSize, addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  var frames = parseStackFrames(stackParser, ex);\n\n  var exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  var event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  var stacktrace = ex.stacktrace || ex.stack || '';\n\n  var popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  var message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n    level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    var errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception ) || isDOMException(exception )) {\n    var domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      var name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      var message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    var objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  var event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nvar validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, htmlTreeAsString, severityLevelFromString, safeJoin, getGlobalObject, parseUrl } from '@sentry/utils';\n\n/** JSDoc */\n\nvar BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n    function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target , keyAttrs)\n        : htmlTreeAsString(handlerData.event , keyAttrs);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  var breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  var global = getGlobalObject();\n  let from = handlerData.from;\n  let to = handlerData.to;\n  var parsedLoc = parseUrl(global.location.href);\n  let parsedFrom = parseUrl(from);\n  var parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nexport { BREADCRUMB_INTEGRATION_ID, Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { getGlobalObject, isNativeFetch, logger, supportsFetch } from '@sentry/utils';\n\nvar global = getGlobalObject();\nlet cachedFetchImpl;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * var f = window.fetch;\n * window.fetch = function () {\n *   var p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(global.fetch)) {\n    return (cachedFetchImpl = global.fetch.bind(global));\n  }\n\n  var document = global.document;\n  let fetchImpl = global.fetch;\n    if (document && typeof document.createElement === 'function') {\n    try {\n      var sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      var contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(global));\n  }\n\n/**\n * Sends sdk client report using sendBeacon or fetch as a fallback if available\n *\n * @param url report endpoint\n * @param body report payload\n */\nfunction sendReport(url, body) {\n  var isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n  var hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n\n  if (hasSendBeacon) {\n    // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n    var sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n    sendBeacon(url, body);\n  } else if (supportsFetch()) {\n    var fetch = getNativeFetchImplementation();\n    fetch(url, {\n      body,\n      method: 'POST',\n      credentials: 'omit',\n      keepalive: true,\n    }).then(null, error => {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(error);\n    });\n  }\n}\n\nexport { getNativeFetchImplementation, sendReport };\n//# sourceMappingURL=utils.js.map\n","import { BaseClient, SDK_VERSION, getCurrentHub, getEnvelopeEndpointWithUrlEncodedAuth } from '@sentry/core';\nimport { getGlobalObject, getEventDescription, logger, createClientReportEnvelope, dsnToString, serializeEnvelope } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs.js';\nimport { sendReport } from './transports/utils.js';\n\nvar globalObject = getGlobalObject();\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && globalObject.document) {\n      globalObject.document.addEventListener('visibilitychange', () => {\n        if (globalObject.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n        level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    var breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    if (\n      breadcrumbIntegration &&\n      // We check for definedness of `options`, even though it is not strictly necessary, because that access to\n      // `.sentry` below does not throw, in case users provided their own integration with id \"Breadcrumbs\" that does\n      // not have an`options` field\n      breadcrumbIntegration.options &&\n      breadcrumbIntegration.options.sentry\n    ) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    var outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options.tunnel);\n    var envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    try {\n      sendReport(url, serializeEnvelope(envelope));\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(e);\n    }\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  var clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n\nvar OPERA10_PRIORITY = 10;\nvar OPERA11_PRIORITY = 20;\nvar CHROME_PRIORITY = 30;\nvar WINJS_PRIORITY = 40;\nvar GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  var frame = {\n    filename,\n    function: func,\n    // All browser frames are considered in_app\n    in_app: true,\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chromeRegex =\n  /^\\s*at (?:(.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nvar chrome = line => {\n  var parts = chromeRegex.exec(line);\n\n  if (parts) {\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      var subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nvar chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nvar gecko = line => {\n  var parts = geckoREgex.exec(line);\n\n  if (parts) {\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      var subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nvar geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nvar winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nvar winjs = line => {\n  var parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nvar winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nvar opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nvar opera10 = line => {\n  var parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nvar opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nvar opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nvar opera11 = line => {\n  var parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nvar opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nvar defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nvar defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nvar extractSafariExtensionDetails = (func, filename) => {\n  var isSafariExtension = func.indexOf('safari-extension') !== -1;\n  var isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n    captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  var level = typeof captureContext === 'string' ? captureContext : undefined;\n  var context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { getOriginalFunction, addExceptionTypeValue, addExceptionMechanism, markFunctionWrapped, addNonEnumerableProperty } from '@sentry/utils';\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  ) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    var wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n    // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n            var wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  \n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} \n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n      } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { getGlobalObject, fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { wrap } from '../helpers.js';\n\nvar DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    var global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    var eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      var eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n    return function ( ...args) {\n    var originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapRAF(original) {\n    return function ( callback) {\n        return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n    return function ( ...args) {\n        var xhr = this;\n    var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n          var wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          var originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n    var global = getGlobalObject() ;\n    var proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n            \n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n                    fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n                wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n          ) {\n      return function (\n                \n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        var wrappedEventHandler = fn ;\n        try {\n          var originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {;GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    var options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n        for (var key in options) {\n      var installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n        (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      var event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n        (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      var event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  var ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  var groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  var event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  var e = (event.exception = event.exception || {});\n  // event.exception.values\n  var ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  var ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  var ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  var ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  var hub = getCurrentHub();\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {;LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    var client = getCurrentHub().getClient();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event, hint) => {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  var linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  var exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\nexport { LinkedErrors, _handler, _walkErrorTree };\n//# sourceMappingURL=linkederrors.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcessor = currentEvent => {\n      var self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  var currentMessage = currentEvent.message;\n  var previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  var previousException = _getExceptionFromEvent(previousEvent);\n  var currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    var frameA = previousFrames[i];\n    var frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  var exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addGlobalEventProcessor((event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        var url = (event.request && event.request.url) || (global.location && global.location.href);\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        var headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        var request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, serializeEnvelope, logger, updateRateLimits, SentryError } from '@sentry/utils';\n\nvar DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE),\n) {\n  let rateLimits = {};\n\n  var flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    var filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      var envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n        var filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    var recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (_, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    var requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n        },\n        error => {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Failed while sending event:', error);\n          recordEnvelopeLoss('network_error');\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event due to full buffer');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  var buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    var task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      var capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n                    if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nvar DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  var headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  var headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  var updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  var rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  var retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (var limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      var headerDelay = parseInt(retryAfter, 10);\n      var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (var category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { createTransport } from '@sentry/core';\nimport { getNativeFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  function makeRequest(request) {\n    var requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      ...options.fetchOptions,\n    };\n\n    return nativeFetch(options.url, requestOptions).then(response => ({\n      statusCode: response.status,\n      headers: {\n        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n        'retry-after': response.headers.get('Retry-After'),\n      },\n    }));\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nvar XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (var header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getCurrentHub, getReportDialogEndpoint } from '@sentry/core';\nimport { getGlobalObject, stackParserFromStackParserOptions, supportsFetch, logger, resolvedSyncPromise, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { wrap as wrap$1 } from './helpers.js';\nimport './integrations/index.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport './transports/index.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nvar defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    var window = getGlobalObject();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  var clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  var global = getGlobalObject();\n  if (!global.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  var dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  var script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n        script.onload = options.onLoad;\n  }\n\n  var injectionPoint = global.document.head || global.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  var window = getGlobalObject();\n  var document = window.document;\n\n  if (typeof document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  var hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\nexport { close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","var TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  var matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (matches) {\n    let parentSampled;\n    if (matches[3] === '1') {\n      parentSampled = true;\n    } else if (matches[3] === '0') {\n      parentSampled = false;\n    }\n    return {\n      traceId: matches[1],\n      parentSampled,\n      parentSpanId: matches[2],\n    };\n  }\n  return undefined;\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData };\n//# sourceMappingURL=tracing.js.map\n","import { getGlobalObject, logger } from '@sentry/utils';\nimport { getActiveTransaction } from '../utils.js';\n\nvar global = getGlobalObject();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      var activeTransaction = getActiveTransaction() ;\n      if (global.document.hidden && activeTransaction) {\n        var statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","var bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        metric.delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || prevValue === undefined) {\n          prevValue = metric.value;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { generateUniqueID } from './generateUniqueID.js';\n\nvar initMetric = (name, value) => {\n  return {\n    name,\n    value: _nullishCoalesce(value, () => ( -1)),\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nvar generateUniqueID = () => {\n  return `v2-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nvar observe = (type, callback) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      // More extensive feature detect needed for Firefox due to:\n      // https://github.com/GoogleChrome/web-vitals/issues/142\n      if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n        return;\n      }\n\n      var po = new PerformanceObserver(l => l.getEntries().map(callback));\n\n      po.observe({ type, buffered: true });\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { getGlobalObject } from '@sentry/utils';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar onHidden = (cb, once) => {\n  var onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","import { getGlobalObject } from '@sentry/utils';\nimport { onHidden } from './onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nvar initHiddenTime = () => {\n  return getGlobalObject().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\n\nvar trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nvar getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/largest-contentful-paint/#sec-largest-contentful-paint-interface\n\nvar reportedMetricIDs = {};\n\nvar getLCP = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('LCP');\n  let report;\n\n  var entryHandler = (entry) => {\n    // The startTime attribute returns the value of the renderTime if it is not 0,\n    // and the value of the loadTime otherwise.\n    var value = entry.startTime;\n\n    // If the page was hidden prior to paint time of the entry,\n    // ignore it and mark the metric as final, otherwise add the entry.\n    if (value < visibilityWatcher.firstHiddenTime) {\n      metric.value = value;\n      metric.entries.push(entry);\n    }\n\n    if (report) {\n      report();\n    }\n  };\n\n  var po = observe('largest-contentful-paint', entryHandler);\n\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    var stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        po.takeRecords().map(entryHandler );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n  }\n};\n\nexport { getLCP };\n//# sourceMappingURL=getLCP.js.map\n","/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\nexport { _startChild, isMeasurementValue };\n//# sourceMappingURL=utils.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getGlobalObject, browserPerformanceTimeOrigin, logger, htmlTreeAsString } from '@sentry/utils';\nimport { msToSec } from '../../utils.js';\nimport { getCLS } from '../web-vitals/getCLS.js';\nimport { getFID } from '../web-vitals/getFID.js';\nimport { getLCP } from '../web-vitals/getLCP.js';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher.js';\nimport { _startChild, isMeasurementValue } from './utils.js';\n\nvar global = getGlobalObject();\n\nfunction getBrowserPerformanceAPI() {\n  return global && global.addEventListener && global.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n */\nfunction startTrackingWebVitals(reportAllChanges = false) {\n  var performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    if (performance.mark) {\n      global.performance.mark('sentry-tracing-init');\n    }\n    _trackCLS();\n    _trackLCP(reportAllChanges);\n    _trackFID();\n  }\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  getCLS(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(reportAllChanges) {\n  getLCP(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    var timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    var startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.lcp'] = { value: timeOrigin + startTime, unit: 'second' };\n    _lcpEntry = entry ;\n  }, reportAllChanges);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  getFID(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    var timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    var startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  var performance = getBrowserPerformanceAPI();\n  if (!performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  var performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n    performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    var startTime = msToSec(entry.startTime);\n    var duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        var startTimestamp = _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        var firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n          _measurements['mark.fp'] = { value: startTimestamp, unit: 'second' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n          _measurements['mark.fcp'] = { value: startTimestamp, unit: 'second' };\n        }\n        break;\n      }\n      case 'resource': {\n        var resourceName = (entry.name ).replace(global.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'millisecond',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      var oldValue = _measurements[name].value;\n      var measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      var normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      var delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    if (_measurements['mark.fid'] && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: _measurements['mark.fid'].value + msToSec(_measurements['fid'].value),\n        op: 'web.vitals',\n        startTimestamp: _measurements['mark.fid'].value,\n      });\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n    entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  var measureStartTimestamp = timeOrigin + startTime;\n  var measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n    entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  var end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  var start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: _nullishCoalesce(description, () => ( event)),\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\nfunction _addRequest(transaction, entry, timeOrigin) {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n    var data = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n\n  var startTimestamp = timeOrigin + startTime;\n  var endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  var navigator = global.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  var connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n\n    if (isMeasurementValue(connection.downlink)) {\n      _measurements['connection.downlink'] = { value: connection.downlink, unit: '' }; // unit is empty string for now, while relay doesn't support download speed units\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingWebVitals };\n//# sourceMappingURL=index.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/layout-instability/#sec-layout-shift\n\nvar getCLS = (onReport, reportAllChanges) => {\n  var metric = initMetric('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  var entryHandler = (entry) => {\n    // Only count layout shifts without recent user input.\n    // TODO: Figure out why entry can be undefined\n    if (entry && !entry.hadRecentInput) {\n      var firstSessionEntry = sessionEntries[0];\n      var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n      // If the entry occurred less than 1 second after the previous entry and\n      // less than 5 seconds after the first entry in the session, include the\n      // entry in the current session. Otherwise, start a new session.\n      if (\n        sessionValue &&\n        sessionEntries.length !== 0 &&\n        entry.startTime - lastSessionEntry.startTime < 1000 &&\n        entry.startTime - firstSessionEntry.startTime < 5000\n      ) {\n        sessionValue += entry.value;\n        sessionEntries.push(entry);\n      } else {\n        sessionValue = entry.value;\n        sessionEntries = [entry];\n      }\n\n      // If the current session value is larger than the current CLS value,\n      // update CLS and the entries contributing to it.\n      if (sessionValue > metric.value) {\n        metric.value = sessionValue;\n        metric.entries = sessionEntries;\n        if (report) {\n          report();\n        }\n      }\n    }\n  };\n\n  var po = observe('layout-shift', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      report(true);\n    });\n  }\n};\n\nexport { getCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getFID = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('FID');\n  let report;\n\n  var entryHandler = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  var po = observe('first-input', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      po.disconnect();\n    }, true);\n  }\n};\n\nexport { getFID };\n//# sourceMappingURL=getFID.js.map\n","import { isMatchingPattern, addInstrumentationHandler, isInstanceOf, BAGGAGE_HEADER_NAME, mergeAndSerializeBaggage } from '@sentry/utils';\nimport { hasTracingEnabled, getActiveTransaction } from '../utils.js';\n\nvar DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\n\nvar defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n    const { traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest } = {\n    ...defaultRequestInstrumentationOptions,\n    ..._options,\n  };\n\n  // We should cache url -> decision so that we don't have to compute\n  // regexp everytime we create a request.\n  var urlMap = {};\n\n  var defaultShouldCreateSpan = (url) => {\n    if (urlMap[url]) {\n      return urlMap[url];\n    }\n    var origins = tracingOrigins;\n    urlMap[url] =\n      origins.some((origin) => isMatchingPattern(url, origin)) &&\n      !isMatchingPattern(url, 'sentry_key');\n    return urlMap[url];\n  };\n\n  // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n  // That's why we filter out already unwanted Spans from tracingOrigins\n  let shouldCreateSpan = defaultShouldCreateSpan;\n  if (typeof shouldCreateSpanForRequest === 'function') {\n    shouldCreateSpan = (url) => {\n      return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n    };\n  }\n\n  var spans = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler('fetch', (handlerData) => {\n      fetchCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler('xhr', (handlerData) => {\n      xhrCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n}\n\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n                span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n            delete spans[spanId];\n    }\n    return;\n  }\n\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    var request = (handlerData.args[0] = handlerData.args[0] );\n        var options = (handlerData.args[1] = (handlerData.args[1] ) || {});\n    options.headers = addTracingHeaders(request, activeTransaction.getBaggage(), span, options);\n  }\n}\n\nfunction addTracingHeaders(\n  request,\n  incomingBaggage,\n  span,\n  options,\n) {\n  let headers = options.headers;\n\n  if (isInstanceOf(request, Request)) {\n    headers = (request ).headers;\n  }\n\n  if (headers) {\n        if (typeof headers.append === 'function') {\n            headers.append('sentry-trace', span.toTraceparent());\n            headers.append(BAGGAGE_HEADER_NAME, mergeAndSerializeBaggage(incomingBaggage, headers.get(BAGGAGE_HEADER_NAME)));\n    } else if (Array.isArray(headers)) {\n      const [, headerBaggageString] = headers.find(([key, _]) => key === BAGGAGE_HEADER_NAME);\n      headers = [\n        ...headers,\n        ['sentry-trace', span.toTraceparent()],\n        [BAGGAGE_HEADER_NAME, mergeAndSerializeBaggage(incomingBaggage, headerBaggageString)],\n      ];\n    } else {\n      headers = {\n        ...headers,\n        'sentry-trace': span.toTraceparent(),\n                baggage: mergeAndSerializeBaggage(incomingBaggage, headers.baggage),\n      };\n    }\n  } else {\n    headers = { 'sentry-trace': span.toTraceparent(), baggage: mergeAndSerializeBaggage(incomingBaggage) };\n  }\n  return headers;\n}\n\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (\n    !hasTracingEnabled() ||\n    (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n    !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  var xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n            delete spans[spanId];\n    }\n    return;\n  }\n\n  // if not, create a new span to track it\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n\n        var headerBaggageString =\n          handlerData.xhr.getRequestHeader && handlerData.xhr.getRequestHeader(BAGGAGE_HEADER_NAME);\n\n        handlerData.xhr.setRequestHeader(\n          BAGGAGE_HEADER_NAME,\n          mergeAndSerializeBaggage(activeTransaction.getBaggage(), headerBaggageString),\n        );\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n\nexport { DEFAULT_TRACING_ORIGINS, defaultRequestInstrumentationOptions, fetchCallback, instrumentOutgoingRequests, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { getGlobalObject, logger, addInstrumentationHandler } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!global || !global.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = global.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'pageload' });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'navigation' });\n      }\n    });\n  }\n}\n\nexport { instrumentRoutingWithDefaults };\n//# sourceMappingURL=router.js.map\n","import { logger, getGlobalObject, extractTraceparentData, parseBaggageSetMutability } from '@sentry/utils';\nimport { startIdleTransaction } from '../hubextensions.js';\nimport { DEFAULT_IDLE_TIMEOUT, DEFAULT_FINAL_TIMEOUT } from '../idletransaction.js';\nimport '../utils.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { startTrackingWebVitals, addPerformanceEntries } from './metrics/index.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\nimport { instrumentRoutingWithDefaults } from './router.js';\n\nvar BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nvar DEFAULT_BROWSER_TRACING_OPTIONS = {\n  idleTimeout: DEFAULT_IDLE_TIMEOUT,\n  finalTimeout: DEFAULT_FINAL_TIMEOUT,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  \n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BROWSER_TRACING_INTEGRATION_ID;}\n\n   constructor(_options) {;BrowserTracing.prototype.__init.call(this);\n    let tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n    // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n    if (_options) {\n      if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins) && _options.tracingOrigins.length !== 0) {\n        tracingOrigins = _options.tracingOrigins;\n      } else {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && (this._emitOptionsWarning = true);\n      }\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n      tracingOrigins,\n    };\n\n    const { _metricOptions } = this.options;\n    startTrackingWebVitals(_metricOptions && _metricOptions._reportAllChanges);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n\n    if (this._emitOptionsWarning) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          '[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.',\n        );\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `[Tracing] We added a reasonable default for you: ${defaultRequestInstrumentationOptions.tracingOrigins}`,\n        );\n    }\n\n        const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracingOrigins,\n      shouldCreateSpanForRequest,\n    } = this.options;\n\n    instrumentRouting(\n      (context) => this._createRouteTransaction(context),\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    instrumentOutgoingRequests({ traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n        const { beforeNavigate, idleTimeout, finalTimeout } = this.options;\n\n    var parentContextFromHeader = context.op === 'pageload' ? extractTraceDataFromMetaTags() : undefined;\n\n    var expandedContext = {\n      ...context,\n      ...parentContextFromHeader,\n      trimEnd: true,\n    };\n    var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    var finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    var hub = this._getCurrentHub();\n    const { location } = getGlobalObject() ;\n\n    var idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n    );\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      addPerformanceEntries(transaction);\n      transaction.setTag(\n        'sentry_reportAllChanges',\n        Boolean(this.options._metricOptions && this.options._metricOptions._reportAllChanges),\n      );\n    });\n\n    return idleTransaction ;\n  }\n}\n\n/**\n * Gets transaction context data from `sentry-trace` and `baggage` <meta> tags.\n * @returns Transaction context data or undefined neither tag exists or has valid data\n */\nfunction extractTraceDataFromMetaTags() {\n  var sentrytraceValue = getMetaContent('sentry-trace');\n  var baggageValue = getMetaContent('baggage');\n\n  var sentrytraceData = sentrytraceValue ? extractTraceparentData(sentrytraceValue) : undefined;\n  var baggage = parseBaggageSetMutability(baggageValue, sentrytraceValue);\n\n  // TODO more extensive checks for baggage validity/emptyness?\n  if (sentrytraceData || baggage) {\n    return {\n      ...(sentrytraceData && sentrytraceData),\n      ...(baggage && { metadata: { baggage } }),\n    };\n  }\n\n  return undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  var globalObject = getGlobalObject();\n\n  // DOM/querySelector is not available in all environments\n  if (globalObject.document && globalObject.document.querySelector) {\n    var el = globalObject.document.querySelector(`meta[name=${metaName}]`);\n    return el ? el.getAttribute('content') : null;\n  } else {\n    return null;\n  }\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing, extractTraceDataFromMetaTags, getMetaContent };\n//# sourceMappingURL=browsertracing.js.map\n","import { addExtensionMethods } from './hubextensions.js';\nexport { addExtensionMethods, startIdleTransaction } from './hubextensions.js';\nimport * as index from './integrations/index.js';\nexport { index as Integrations };\nimport './browser/index.js';\nexport { Span, spanStatusfromHttpCode } from './span.js';\nexport { SpanStatus } from './spanstatus.js';\nexport { Transaction } from './transaction.js';\nexport { IdleTransaction } from './idletransaction.js';\nexport { getActiveTransaction, hasTracingEnabled } from './utils.js';\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing } from './browser/browsertracing.js';\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './browser/request.js';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n;\n;\n\n// Treeshakable guard to remove all code related to tracing\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  addExtensionMethods();\n}\n//# sourceMappingURL=index.js.map\n","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n            console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  var hub = getCurrentHub();\n  var scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  var client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import * as Sentry from \"@sentry/browser\";\nimport { BrowserTracing } from \"@sentry/tracing\";\n\nSentry.init({\n  dsn: \"https://e1f35daf20434510a5cd3642c7ef4da2@o1201057.ingest.sentry.io/6557289\",\n  integrations: [new BrowserTracing()],\n  environment: \"test\",\n  release: \"test\",\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\ndocument.body.innerHTML = `\n<div>kjahsdjkfhlkjghsadjkgjlhjkhasjkdfhkahsldkfh</div>\n<script src=\"https://cdn.dp.tech/bohrium/web/static/js/vendors.d06f8b38.chunk.js\"></script>\n`;\n\ndocument.addEventListener(\"click\", () => {\n  window.hahahaha();\n  setTimeout(() => {\n    myUndefinedFunction();\n\n    console.log(hahaha.ddddd);\n  }, 3000);\n});\n"],"names":["_global","DEFAULT_BREADCRUMBS","Hub","__init","this","_stack","constructor","client","scope","_version","prototype","call","getStackTop","bindClient","isOlderThan","version","setupIntegrations","pushScope","getScope","getStack","push","getClient","popScope","length","pop","withScope","callback","captureException","exception","hint","eventId","_lastEventId","event_id","syntheticException","Error","_withClient","originalException","captureMessage","message","level","captureEvent","event","type","lastEventId","addBreadcrumb","breadcrumb","beforeBreadcrumb","maxBreadcrumbs","getOptions","mergedBreadcrumb","timestamp","finalBreadcrumb","setUser","user","setTags","tags","setExtras","extras","setTag","key","value","setExtra","extra","setContext","name","context","configureScope","run","oldHub","makeMain","getIntegration","integration","_oO","__SENTRY_DEBUG__","id","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","layer","session","getSession","setSession","startSession","release","environment","global","userAgent","navigator","getUser","currentSession","status","shouldSendDefaultPii","options","Boolean","sendDefaultPii","method","args","sentry","getMainCarrier","__SENTRY__","extensions","apply","carrier","hub","undefined","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","activeDomain","domain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","static","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setFingerprint","fingerprint","setLevel","setTransactionName","setSpan","span","getSpan","getTransaction","transaction","update","captureContext","updatedScope","Object","keys","contexts","clear","maxCrumbs","Math","min","slice","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","sdkProcessingMetadata","_notifyEventProcessors","getGlobalEventProcessors","setSDKProcessingMetadata","newData","processors","index","resolve","reject","processor","result","log","then","final","forEach","Array","isArray","concat","addGlobalEventProcessor","makeSession","startingTime","sid","init","started","duration","errors","ignoreDuration","toJSON","Date","toISOString","did","attrs","ip_address","ipAddress","user_agent","sessionToJSON","updateSession","email","username","closeSession","errorCallback","activeTransaction","logger","setStatus","toTraceparent","sample","samplingContext","sampled","setMetadata","transactionSampling","sampleRate","tracesSampler","rate","Number","parentSampled","tracesSampleRate","is","JSON","stringify","random","op","_startTransaction","transactionContext","initSpanRecorder","_experiments","startIdleTransaction","idleTimeout","finalTimeout","onScope","addExtensionMethods","packageToIntegrationMapping","mongodb","module","Mongo","mongoose","mysql","Mysql","pg","Postgres","mappedPackages","filter","moduleName","map","pkg","e","p","integrations","_autoloadDatabaseIntegrations","DEFAULT_IDLE_TIMEOUT","DEFAULT_FINAL_TIMEOUT","IdleTransactionSpanRecorder","_pushActivity","_popActivity","transactionSpanId","maxlen","super","add","spanId","finish","endTimestamp","IdleTransaction","activities","__init2","_heartbeatCounter","__init3","_finished","__init4","_beforeFinishCallbacks","_idleHub","_idleTimeout","_finalTimeout","_onScope","clearActiveTransaction","_startIdleTimeout","setTimeout","spanRecorder","spans","keepSpan","startTimestamp","registerBeforeFinishCallback","_pingHeartbeat","_cancelIdleTimeout","_idleTimeoutID","clearTimeout","_beat","heartbeatString","join","_prevHeartbeatString","SpanRecorder","_maxlen","Span","traceId","substring","__init5","__init6","data","spanContext","parentSpanId","description","startChild","childSpan","setData","setHttpStatus","httpStatus","String","spanStatus","spanStatusfromHttpCode","isSuccess","sampledString","toContext","updateWithContext","parent_span_id","span_id","trace_id","start_timestamp","Transaction","_measurements","_hub","metadata","_trimEnd","trimEnd","setName","setMeasurement","unit","newMetadata","finishedSpans","s","reduce","prev","current","baggage","getBaggage","measurements","recordDroppedEvent","existingBaggage","finalBaggage","_populateBaggageWithSentryValues","publicKey","public_key","getDsn","sample_rate","toLocaleString","useGrouping","maximumFractionDigits","segment","user_segment","hasTracingEnabled","maybeOptions","getActiveTransaction","maybeHub","msToSec","time","BAGGAGE_HEADER_NAME","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","createBaggage","initItems","baggageString","mutable","getSentryBaggageItems","isBaggageMutable","parseBaggageHeader","inputBaggageValue","includeThirdPartyEntries","split","entry","trim","test","baggageObj","curr","val","baggageKey","decodeURIComponent","mergeAndSerializeBaggage","incomingBaggage","thirdPartyBaggageHeader","headerBaggage","thirdPartyHeaderBaggage","baggageEntry","encodeURIComponent","newVal","parseBaggageSetMutability","rawBaggageValue","sentryTraceHeader","isSentryBaggageEmpty","setBaggageImmutable","htmlTreeAsString","elem","keyAttrs","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","parentNode","reverse","el","className","classes","attr","i","tagName","toLowerCase","keyAttrPairs","keyAttr","getAttribute","keyAttrPair","allowedAttrs","getLocationHref","document","location","href","oO","_nullishCoalesce","lhs","rhsFn","fallbackGlobalObject","getGlobalObject","g","window","self","getGlobalSingleton","creator","obj","handlers","instrumented","addInstrumentationHandler","console","originalConsoleMethod","triggerHandlers","triggerDOMHandler","bind","globalDOMEventHandler","makeDOMEventHandler","addEventListener","target","proto","hasOwnProperty","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","handler","originalRemoveEventListener","instrumentDOM","xhrproto","XMLHttpRequest","originalOpen","xhr","url","xhrInfo","__sentry_xhr__","toUpperCase","match","__sentry_own_request__","onreadystatechangeHandler","readyState","status_code","now","onreadystatechange","original","readyStateArgs","originalSend","body","instrumentXHR","originalFetch","handlerData","fetchData","getFetchMethod","getFetchUrl","response","error","oldOnPopState","onpopstate","to","from","lastHref","history","historyReplacementFunction","originalHistoryFunction","instrumentHistory","_oldOnErrorHandler","onerror","msg","line","column","arguments","_oldOnUnhandledRejectionHandler","onunhandledrejection","instrument","fetchArgs","Request","debounceTimerID","lastCapturedEvent","globalListener","isContentEditable","shouldSkipDOMEvent","previous","shouldShortcircuitPreviousDebounce","objectToString","toString","isError","wat","isInstanceOf","isBuiltin","ty","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","isSyntheticEvent","isNaN","base","_e","CONSOLE_LEVELS","consoleSandbox","originalConsole","wrappedLevels","originalWrappedFunc","__sentry_original__","makeLogger","enabled","enable","disable","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","r","parseUrl","query","fragment","host","path","protocol","relative","getFirstException","values","getEventDescription","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","checkOrSetAlreadyCaught","__sentry_captured__","err","isNodeEnv","__SENTRY_BROWSER_BUNDLE__","process","dynamicRequire","mod","request","require","loadModule","cwd","fill","source","replacementFactory","wrapped","markFunctionWrapped","addNonEnumerableProperty","defineProperty","writable","configurable","getOriginalFunction","func","urlEncode","object","convertToPlainObject","stack","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","detail","extractedProps","property","extractExceptionKeysForMessage","maxLength","sort","includedKeys","serialized","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","memoVal","get","returnValue","set","item","createStackParser","parsers","sortedParsers","a","b","skipFirst","frames","parser","frame","localStack","firstFrameFunction","function","lastFrameFunction","indexOf","filename","stripSentryFramesAndReverse","stackParserFromStackParserOptions","stackParser","defaultFunctionName","getFunctionName","fn","truncate","str","max","substr","safeJoin","input","delimiter","output","isMatchingPattern","pattern","supportsFetch","Headers","Response","isNativeFetch","supportsNativeFetch","fetch","doc","sandbox","createElement","hidden","head","appendChild","contentWindow","removeChild","supportsHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","_","_state","PENDING","_handlers","executor","_resolve","_reject","onfulfilled","onrejected","_executeHandlers","catch","finally","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","dateTimestampSource","nowSeconds","platformPerformance","performance","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","timestampWithMs","_browserPerformanceTimeOriginMode","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","loaded","__webpack_modules__","d","definition","o","enumerable","globalThis","Function","hmd","create","children","prop","SENTRY_RELEASE","SENTRY_RELEASES","installedIntegrations","filterDuplicates","acc","every","accIntegration","getIntegrationsToSetup","defaultIntegrations","userIntegrations","userIntegration","integrationsNames","alwaysLastToRun","splice","DEFAULT_IGNORE_ERRORS","InboundFilters","_options","setupOnce","eventProcess","clientOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","ignoreInternal","_mergeOptions","_isSentryError","_getPossibleEventMessages","some","_isIgnoredError","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","stacktrace","_getLastValidUrl","__initStatic","originalFunctionToString","FunctionToString","SentryError","setPrototypeOf","DSN_REGEX","dsn","withPassword","pass","port","projectId","dsnFromComponents","components","exec","lastPath","projectMatch","dsnFromString","component","isValidProtocol","parseInt","validateDsn","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItem","envelopeItemType","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","next","itemHeaders","payload","Uint8Array","buffers","totalLength","buf","merged","offset","buffer","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","envelopeItemTypeToDataCategory","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","maxSize","normalized","encodeURI","utf8Length","memo","hasWeakSet","WeakSet","inner","has","delete","memoBuilder","memoize","unmemoize","includes","stringified","_events","getPrototypeOf","stringifyValue","startsWith","valueWithToJSON","numAdded","visitable","visitKey","visitValue","getEnvelopeEndpointWithUrlEncodedAuth","tunnel","getBaseApiEndpoint","_getIngestEndpoint","sentry_key","sentry_version","_encodedAuth","getSdkMetadataForEnvelopeHeader","sdk","ALREADY_SEEN_ERROR","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_dsn","_transport","transport","transportOptions","_process","eventFromException","_captureEvent","promisedEvent","eventFromMessage","_isEnabled","sendSession","getTransport","flush","timeout","_isClientDoneProcessing","clientFinished","transportFlushed","close","integrationIndex","getIntegrationById","integrationId","sendEvent","env","sdkInfo","eventType","samplingMethod","packages","enhanceEventWithSdkInfo","envelopeHeaders","dynamicSamplingContext","sent_at","createEventEnvelopeHeaders","sample_rates","createEventEnvelope","_metadata","attachments","_sendEnvelope","createSessionEnvelope","category","sendClientReports","_updateSessionFromEvent","crashed","errored","exceptions","ex","sessionNonTerminal","ticked","interval","setInterval","clearInterval","_prepareEvent","normalizeDepth","normalizeMaxBreadth","prepared","_applyClientOptions","_applyIntegrationsMetadata","finalScope","evt","_normalizeEvent","maxBreadth","dist","maxValueLength","integrationsArray","_processEvent","finalEvent","beforeSend","isTransaction","__sentry__","rv","nullErr","_ensureBeforeSendRv","processedEvent","promise","send","_clearOutcomes","outcomes","quantity","SDK_VERSION","exceptionFromError","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","__serialized__","eventFromPlainObject","synthetic","validSeverityLevels","BREADCRUMB_INTEGRATION_ID","Breadcrumbs","dom","_consoleBreadcrumb","serializeAttribute","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","parsedLoc","parsedFrom","parsedTo","cachedFetchImpl","getNativeFetchImplementation","fetchImpl","globalObject","BrowserClient","visibilityState","_flushOutcomes","breadcrumbIntegration","platform","discarded_events","sendBeacon","supports","credentials","keepalive","sendReport","UNKNOWN_FUNCTION","createFrame","lineno","colno","in_app","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackLineParsers","subMatch","extractSafariExtensionDetails","defaultStackParser","isSafariExtension","isSafariWebExtension","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","TryCatch","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","originalCallback","wrapOptions","originalFunction","eventName","handleEvent","wrappedEventHandler","originalEventHandler","GlobalHandlers","_installFunc","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","stackTraceLimit","installFunc","getHubAndOptions","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","addMechanismAndCapture","ev","ev0","ev0s","ev0sf","LinkedErrors","_key","_limit","limit","linkedErrors","_walkErrorTree","_handler","Dedupe","eventProcessor","currentEvent","previousEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","_previousEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","HttpContext","referrer","Referer","createTransport","makeRequest","remove","task","$","taskProducer","drain","counter","capturedSetTimeout","makePromiseBuffer","bufferSize","rateLimits","filteredEnvelopeItems","envelopeItemDataCategory","limits","all","disabledUntil","isRateLimited","filteredEnvelope","recordEnvelopeLoss","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","headerDelay","delay","header","headerDate","parse","parseRetryAfterHeader","updateRateLimits","makeFetchTransport","nativeFetch","requestOptions","referrerPolicy","fetchOptions","makeXHRTransport","getResponseHeader","open","setRequestHeader","startSessionOnHub","TRACEPARENT_REGEXP","RegExp","bindReporter","metric","reportAllChanges","prevValue","forceReport","delta","initMetric","entries","floor","observe","PerformanceObserver","supportedEntryTypes","po","l","getEntries","buffered","onHidden","cb","once","onHiddenOrPageHide","removeEventListener","firstHiddenTime","getVisibilityWatcher","Infinity","timeStamp","reportedMetricIDs","isMeasurementValue","isFinite","_startChild","ctx","getBrowserPerformanceAPI","_lcpEntry","_clsEntry","_performanceCursor","startTrackingWebVitals","mark","onReport","report","sessionValue","sessionEntries","entryHandler","hadRecentInput","firstSessionEntry","lastSessionEntry","startTime","getCLS","takeRecords","visibilityWatcher","stopListening","disconnect","capture","getLCP","_trackLCP","processingStart","getFID","_addPerformanceNavigationTiming","eventEnd","end","start","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","pathname","BrowserTracing","_emitOptionsWarning","_metricOptions","_reportAllChanges","_getCurrentHub","instrumentRouting","shouldCreateSpanForRequest","_createRouteTransaction","urlMap","defaultShouldCreateSpan","origins","origin","shouldCreateSpan","__span","headerBaggageString","find","addTracingHeaders","fetchCallback","__sentry_xhr_span_id__","getRequestHeader","xhrCallback","instrumentOutgoingRequests","beforeNavigate","parentContextFromHeader","sentrytraceValue","getMetaContent","baggageValue","sentrytraceData","traceparent","matches","extractTraceparentData","extractTraceDataFromMetaTags","expandedContext","modifiedContext","finalContext","idleTransaction","performanceEntries","responseStartTimestamp","requestStartTimestamp","entryType","requestStart","responseEnd","responseStart","_addRequest","_addNavigationSpans","measureStartTimestamp","measureEndTimestamp","_addMeasureSpans","firstHidden","shouldRecord","resourceName","initiatorType","transferSize","encodedBodySize","decodedBodySize","_addResourceSpans","connection","effectiveType","rtt","downlink","deviceMemory","hardwareConcurrency","_trackNavigator","oldValue","measurementTimestamp","normalizedValue","cls","measurementName","element","size","sources","node","_tagMetricInfo","addPerformanceEntries","metaName","querySelector","__SENTRY_TRACING__","autoSessionTracking","clientClass","debug","warn","initialScope","initAndBind","startSessionTracking","innerHTML","hahahaha","myUndefinedFunction","hahaha","ddddd"],"sourceRoot":""}